{"version":3,"sources":["components/Controls.js","components/Timer.js","components/ControlMinutes.js","App.js","serviceWorker.js","index.js"],"names":["Controls","props","paused","onClick","e","onControlClick","id","className","aria-hidden","Timer","minutes","seconds","sessionType","parseInt","userSession","userBreak","ControlMinutes","style","textTransform","type","sessionRunning","onIncrement","disabled","session","onDecrement","App","countDown","timerType","setState","state","break","userSetBreak","userSetSession","sessionTimerRunning","timerPaused","intervalId","handleIncrementClick","bind","handleDecrementClick","handleControlClick","pauseTimer","runTimer","startTimer","currentTarget","this","prevState","clearInterval","beepSound","pause","currentTime","sType","play","t","setInterval","href","title","target","class","rel","preload","src","ref","audio","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.306af409.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Controls = props => {\r\n  return (\r\n    <div>\r\n      {props.paused\r\n        ? <button onClick={(e) => props.onControlClick(e)} id=\"start_stop\">\r\n          <i className=\"fa fa-play-circle fa-2x\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        : <button onClick={(e) => props.onControlClick(e)} id=\"start_stop\">\r\n          <i className=\"fa fa-pause-circle fa-2x\" aria-hidden=\"true\"></i>\r\n        </button>}\r\n      <button onClick={(e) => props.onControlClick(e)} id=\"reset\">\r\n        <i className=\"fa fa-refresh fa-2x\" aria-hidden=\"true\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n\r\n","import React from 'react';\r\n\r\nconst Timer = props => {\r\n  let minutes, seconds\r\n\r\n  if (props.sessionType === \"session\") {\r\n    minutes = parseInt(props.userSession / 60, 10);\r\n    seconds = parseInt(props.userSession % 60, 10);\r\n  } else if (props.sessionType === \"break\") {\r\n    minutes = parseInt(props.userBreak / 60, 10);\r\n    seconds = parseInt(props.userBreak % 60, 10);\r\n  }\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return (\r\n    <div id=\"time-left\">\r\n      {minutes + \":\" + seconds}\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nexport default Timer;","import React from 'react';\r\n\r\nconst ControlMinutes = props => {\r\n  return (\r\n    <div>\r\n\r\n      <div style={{ textTransform: 'capitalize' }}\r\n        id={props.type + \"-label\"}>{props.type} Length</div>\r\n\r\n      <div className=\"length-control\">\r\n\r\n        <div className=\"arrow-button\">\r\n          <button\r\n            className={props.sessionRunning ? \"disabled\" : null}\r\n            onClick={(e) => props.onIncrement(e)}\r\n            id={props.type + \"-increment\"}\r\n            disabled={props.sessionRunning && !props.paused}>\r\n            <i className=\"fa fa-arrow-up fa-2x\" aria-hidden=\"true\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div id={props.type + \"-length\"}>{props.session / 60}</div>\r\n\r\n        <div className=\"arrow-button\">\r\n          <button\r\n            className={props.sessionRunning ? \"disabled\" : null}\r\n            onClick={(e) => props.onDecrement(e)}\r\n            id={props.type + \"-decrement\"}\r\n            disabled={props.sessionRunning && !props.paused}>\r\n            <i className=\"fa fa-arrow-down fa-2x\" aria-hidden=\"true\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlMinutes;","import React, { Component } from 'react';\nimport './App.css';\nimport Controls from './components/Controls';\nimport Timer from './components/Timer';\nimport ControlMinutes from './components/ControlMinutes';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      break: 300,\n      userSetBreak: 300,\n      session: 1500,\n      userSetSession: 1500,\n      sessionTimerRunning: false,\n      timerPaused: true,\n      intervalId: \"\",\n      sessionType: \"session\"\n    };\n    this.handleIncrementClick = this.handleIncrementClick.bind(this);\n    this.handleDecrementClick = this.handleDecrementClick.bind(this);\n    this.handleControlClick = this.handleControlClick.bind(this);\n    this.pauseTimer = this.pauseTimer.bind(this);\n    this.runTimer = this.runTimer.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  handleIncrementClick(e) {\n    if (e.currentTarget.id === \"break-increment\") {\n      this.state.break === 3600\n        ? this.setState(prevState => {\n          return { break: prevState.break };\n        })\n        : this.setState(prevState => {\n          return {\n            userSetBreak: prevState.userSetBreak + 60,\n            break: this.state.userSetBreak + 60\n          };\n        });\n    } else {\n      this.state.session === 3600\n        ? this.setState(prevState => {\n          return { session: prevState.session };\n        })\n        : this.setState(prevState => {\n          return {\n            userSetSession: prevState.userSetSession + 60,\n            session: this.state.userSetSession + 60\n          };\n        });\n    }\n  }\n\n  handleDecrementClick(e) {\n    if (e.currentTarget.id === \"break-decrement\") {\n      this.state.break === 60\n        ? this.setState(prevState => {\n          return { break: prevState.break };\n        })\n        : this.setState(prevState => {\n          return {\n            userSetBreak: prevState.userSetBreak - 60,\n            break: this.state.userSetBreak - 60\n          };\n        });\n    } else {\n      this.state.session === 60\n        ? this.setState(prevState => {\n          return { session: prevState.session };\n        })\n        : this.setState(prevState => {\n          return {\n            userSetSession: prevState.userSetSession - 60,\n            session: this.state.userSetSession - 60\n          };\n        });\n    }\n\n  }\n\n  handleControlClick(e) {\n    if (e.currentTarget.id === \"start_stop\") {\n      this.setState(prevState => {\n        return {\n          sessionTimerRunning: !prevState.sessionTimerRunning,\n          timerPaused: !prevState.timerPaused\n        }\n      })\n      if (this.state.sessionType === \"session\") {\n        this.state.sessionTimerRunning\n          ? this.pauseTimer()\n          : this.startTimer(\"session\");\n      } else {\n        this.state.sessionTimerRunning\n          ? this.pauseTimer()\n          : this.startTimer(\"break\");\n      }\n    } else if (e.currentTarget.id === \"reset\") {\n      clearInterval(this.state.intervalId)\n      this.beepSound.pause()\n      this.beepSound.currentTime = 0;\n      this.setState(prevState => {\n        return {\n          break: 300,\n          userSetBreak: 300,\n          session: 1500,\n          userSetSession: 1500,\n          sessionTimerRunning: false,\n          timerPaused: true,\n          intervalId: \"\",\n          sessionType: \"session\"\n        }\n      })\n    }\n  }\n\n  countDown = (timerType) => {\n    timerType === \"session\"\n      ? this.setState({ session: this.state.session - 1 })\n      : this.setState({ break: this.state.break - 1 })\n  }\n\n  runTimer(timerType) {\n    let sType = timerType === \"session\" ? \"session\" : \"break\"\n    if (timerType === \"session\") {\n      this.setState({\n        sessionType: sType,\n        sessionTimerRunning: true,\n        timerPaused: false,\n        break: this.state.userSetBreak\n      })\n      if (this.state.session < 0) {\n        clearInterval(this.state.intervalId);\n        this.setState({\n          session: this.state.userSetSession,\n          intervalId: \"\",\n          sessionTimerRunning: false,\n          timerPaused: true,\n          sessionType: \"break\"\n        })\n        this.beepSound.play()\n        this.startTimer(\"break\")\n      }\n\n    } else if (timerType === \"break\") {\n      this.setState({\n        sessionType: sType,\n        sessionTimerRunning: true,\n        timerPaused: false,\n        session: this.state.userSetSession\n      })\n      if (this.state.break < 0) {\n        clearInterval(this.state.intervalId);\n        this.setState({\n          break: this.state.userSetBreak,\n          intervalId: \"\",\n          sessionTimerRunning: false,\n          timerPaused: true,\n          sessionType: \"session\"\n        })\n        this.beepSound.play()\n        this.startTimer(\"session\")\n      }\n    }\n  }\n\n  startTimer(t) {\n    var countdown = this.state.session;\n    let intervalId = setInterval(() => {\n      this.countDown(t)\n      this.runTimer(t)\n    }, 1000)\n    this.setState({\n      intervalId: intervalId\n    })\n  }\n\n  pauseTimer() {\n    this.setState(prevState => {\n      return {\n        sessionTimerRunning: false,\n        timerPaused: true\n      }\n    })\n    clearInterval(this.state.intervalId)\n  }\n\n  render() {\n    return (\n      <div id=\"wrapper\">\n        <section className=\"container-social\">\n          <div className=\"text-right\">\n            <ul className=\"social-list\">\n              <li>\n                <a href=\"https://www.linkedin.com/in/sonyacooley/\" title=\"linkedin\" target=\"blank\"><i\n                  className=\"fa fa-linkedin\"></i></a>\n              </li>\n              <li>\n                <a href=\"https://github.com/Sonnerz\" title=\"github\" target=\"blank\"><i className=\"fa fa-github-square\"></i></a>\n              </li>\n              <li>\n                <a href=\"https://www.freecodecamp.org/sonnerz\" title=\"free code camp\" target=\"blank\"><i\n                  className=\"fa fa-free-code-camp\"></i></a>\n              </li>\n              <li>\n                <a href=\"https://sonnerz.github.io\" title=\"portfolio\" target=\"blank\"><i class=\"fa fa-briefcase\" aria-hidden=\"true\"></i></a>\n              </li>\n              <li>\n                <a className=\"nav-link text-light\" rel=\"noopener noreferrer\" href=\"mailto:sonya.cooley@mail.com\" target=\"_blank\" title=\"email me\"><i\n                  className=\"fa fa-envelope-square\"></i></a>\n              </li>\n            </ul>\n          </div>\n        </section>\n        <h1>Pomodoro Clock</h1>\n        <div id=\"app-container\">\n          <div className=\"length-controls\">\n            <div id=\"break-component\">\n              <ControlMinutes\n                onIncrement={this.handleIncrementClick}\n                onDecrement={this.handleDecrementClick}\n                session={this.state.userSetBreak}\n                type={\"break\"}\n                sessionRunning={this.state.sessionTimerRunning}\n                sessionType={this.state.sessionType} />\n            </div>\n            <div id=\"session-component\">\n              <ControlMinutes\n                onIncrement={this.handleIncrementClick}\n                onDecrement={this.handleDecrementClick}\n                session={this.state.userSetSession}\n                type={\"session\"}\n                sessionRunning={this.state.sessionTimerRunning}\n                sessionType={this.state.sessionType} />\n            </div>\n          </div>\n\n          <div id=\"timer-component\">\n            <div id=\"timer-clock\">\n              <Timer\n                userSession={this.state.session}\n                userBreak={this.state.break}\n                sessionType={this.state.sessionType}\n              />\n            </div>\n            <div id=\"timer-label\">\n              {this.state.sessionType === \"session\" ? \"Session\" : \"Break\"}\n            </div>\n          </div>\n          <div id=\"controls-component\">\n            <Controls\n              onControlClick={this.handleControlClick}\n              paused={this.state.timerPaused}\n              sessionType={this.state.sessionType} />\n          </div>\n          <audio id=\"beep\" preload=\"auto\"\n            src=\"https://goo.gl/65cBl1\"\n            ref={(audio) => { this.beepSound = audio; }} />\n\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}